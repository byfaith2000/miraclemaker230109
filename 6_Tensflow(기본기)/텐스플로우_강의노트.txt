21.8.20 by 이고잉

https://www.tensorflow.org/

VSC : 확장기능
 - Browser Preview
 - Live Server

javascript=>node.ja

var 다음주온도 = [15,16,17, 18, 19]
        var 다음주원인 = tf.tensor(다음주온도);
        var 다음주결과 = model.predict(다음주원인);
        다음주결과.print();

(tensorflow.js 복습) 21.9.3
.남의 모델 사용할 때
 - https://www.tensorflow.org 접속
 - 자바스크립트용 선책
 - TensorFlow.js 시작하기 선택
 - 모델 보기 선택
 - ex. 이미지 분류(코드 보기) 선택
 - 하단 via Script Tag 코드 복사해서 html body 태그안에 붙여넣기
 - 사진 파일 변경하여 로딩하기
 - 웹브라우저 실행(일반 브라우저 실행안되고 웹서버 있어야 함)
 - 웹화면에서 검사화면 진입 및 콘솔 실행하면 하단에 결과 나옴

.내 모델 만들고 싶을 때
 - https://www.tensorflow.org 접속
 - TensorFlow>학습>For JavaScript>튜토리얼에서
 - 설정 진입시 중간쯤 스크립트 태그를 통한 사용법에 있는 코드를 복사해서
   html head 태그 안에 붙여넣기 한다. 



21.8.23 by 이숙번

https://colab.research.google.com/drive/1SXgVFc5SYaf2oJ_E4GtIvF4t56TtXEX8

x, y 연관성은 딥러닝보다 회귀분석으로 한다. 

https://github.com/blackdew/ml-tensorflow : 데이타 있는 곳

오픈 튜드리올스
데이타 과학 > 

kaggle.com

21.8.24 by 이숙번
https://colab.research.google.com/drive/1SXgVFc5SYaf2oJ_E4GtIvF4t56TtXEX8#scrollTo=yQaHHSdvM82H

특징자동추출기
딥러닝은 특징자동 추출을 하는 것이다.(hidden layers)
변수에서 바로 집값이 아니라 변수를 통해 새로운 특징(예를들면, 우리가족이 좋아할만한집)
들을 찾아내는 것이다. 

설명가능한 딥러닝(구글링)
설명 가능한 인공지능(XAI)... 왜 주목하나?

https://playground.tensorflow.org/#activation=tanh&batchSize=10&dataset=circle&regDataset=reg-plane&learningRate=0.03&regularizationRate=0&noise=0&networkShape=4,2&seed=0.47270&showTestData=false&discretize=false&percTrainData=50&x=true&y=true&xTimesY=false&xSquared=false&ySquared=false&cosX=false&sinX=false&cosY=false&sinY=false&collectStats=false&problem=classification&initZero=false&hideText=false

Functional과 Sequential 있으나 Functional을 사용하는 것을 추천

ppt 파일 2개
https://docs.google.com/presentation/d/1U1vitklSoXVFDckVM9AoB010Qsnk78dXqJNpXTHLFGU/edit#slide=id.g882dfa8ce9_0_395

https://docs.google.com/presentation/d/1hQzBJx4QaK62WxbK-7J4x48BF6JFOYBfl31l8VnWptg/edit#slide=id.g897a1ca1ed_0_265


tf.keras.layers. 치면 목록 뜸..

'swish'와 tf.keras.activations.swish는 동일
=>swish가 activations함수인것과 어떤 항목이 있는줄 알기 위해필요

ppt 내용
TF Keras를 이용한 적절한 모델의 구성
인공신경망은 여러가지 모델 중 하나
모델 구성 방식은 Model, Sequential 두 가지 중 선택
여러가지 신경망 블럭을 이용하여 자유롭게 구성가능
loss(손실 함수) 정의 + optimizer(최적화 방법) 선택

3. 일정 20p
분류는 시그모이드
히든레이어
회귀는 y=x의 아이덴팉니함수 들어감

train
test : 수능
val : 모의고사

워크북
https://docs.google.com/spreadsheets/d/11DAONRZ92ob0T0YRIT5KgU9vNeO28bYNvteu_-fbRV0/edit#gid=0

데이타과학 학습의 실제


*tf.keras.datasets.mnist

https://darkpgmr.tistory.com/45 :미적분 설명


21.8.26 by 이숙번(크롤링 할 차례이나 딥러닝 조금 복습함)

https://colab.research.google.com/drive/1SXgVFc5SYaf2oJ_E4GtIvF4t56TtXEX8?usp=sharing#scrollTo=pv_ZrEU7FUr-


전 7일 데이타 합산해서 다음날 종가 예측함

dataset = dataset.values[::-1]  ===>내림차순
data_norm = (dataset - dataset.min(axis=0)) / (dataset.max(axis=0) - dataset.min(axis=0))
print(data_norm.shape) ===>min, max nomalization

x_data = np.array([data_norm[i : i + 7, :] for i in range(len(data_norm) - 7)])===>전 7일 합산
y_data = np.array([data_norm[i + 7, [-1]] for i in range(len(data_norm) - 7)])===>그 다음날 종가

print(x_train.shape, y_train.shape)

x_test, x_train = x_train[505:], x_train[:505]
y_test, y_train = y_train[505:], y_train[:505]

print(x_train.shape, y_train.shape)
print(x_test.shape, y_test.shape)

(결과)

(732, 5)
(725, 7, 5) (725, 1) ==>전 7일 데이타 합산해서 다음날 종가 예측함
(505, 7, 5) (505, 1)==>train data
(220, 7, 5) (220, 1)===>test data


2step : 깡통모델 만들기
X = tf.keras.layers.Input(shape=[7, 5])
H = tf.keras.layers.LSTM(32)(X) ===>LSTM배우는게 관건
Y = tf.keras.layers.Dense(1)(H)

model = tf.keras.models.Model(X, Y)
model.compile(optimizer='adam', loss='mse')
model.summary()

3step : 
model.fit(x_train, y_train, epochs=500, verbose=0)
model.fit(x_train, y_train, epochs=10)

4step: 
pred = model.predict(x_test)

import matplotlib.pyplot as plt
plt.plot(pred)
plt.plot(y_test)
plt.legend(['pred', 'real'])
plt.show()
























